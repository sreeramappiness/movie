plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android-extensions'
}
apply plugin: 'jacoco'

android {
    namespace 'com.victoriasecret.movie'
    compileSdk 33

    defaultConfig {
        applicationId "com.victoriasecret.movie"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }

    testOptions {
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.0'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.core:core-ktx:+'
    implementation 'androidx.test.espresso:espresso-contrib:3.5.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    //recycler view
    implementation 'androidx.recyclerview:recyclerview:1.0.0'

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.6.2"
    implementation "com.squareup.retrofit2:converter-gson:2.6.2"

    //kotlin
    //implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    //kotlin Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2'

    //live data lifecycle
    def lifecycle_version = "2.1.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    //implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0'
    implementation 'com.github.bumptech.glide:glide:4.12.0'

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'

    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0'
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}
task jacocoTestReport(type: JacocoReport,
        dependsOn: ['createDebugCoverageReport', 'testDebugUnitTest']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*',
                      '**/*Test*.*', 'android/**/*.*', '**/Glide*.*', '**/Rave*.*', '**/*Validator.*']
    def debugTree = fileTree(
            // Java generated classes on Android project (debug build)
            dir: "$buildDir/intermediates/javac/debug",
            excludes: fileFilter
    ) + fileTree(
            // Kotlin generated classes on Android project (debug build)
            dir: "$buildDir/tmp/kotlin-classes/debug",
            excludes: fileFilter
    )
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories.from = files([mainSrc])
    classDirectories.from = files([debugTree])
    additionalSourceDirs.from = files([
            "${buildDir}/generated/source/buildConfig/debug",
            "${buildDir}/generated/source/rs/debug"
    ])

    executionData.from = fileTree(dir: project.buildDir, includes: [
            'outputs/code_coverage/debugAndroidTest/connected/*coverage.ec', 'jacoco/testDebugUnitTest.exec'
    ])
}